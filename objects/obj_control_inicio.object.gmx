<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Variables de menu
global.strGameState = "start";
//start        - Inicio de juego
//start_menu   - menu de inicio
//game_new     - Nuevo juego
//instructions - Instrucciones
//game_option  - Opciones

global.fntGlobal = font_inicio;

numOption = 0;

strStart = "Pulsa cualquier bot√≥n para empezar";

arrMenu[0] = "Nuevo Juego";
arrMenu[1] = "Instrucciones";
arrMenu[2] = "Opciones";
arrMenu[3] = "Salir";

//Musica de fondo
audio_play_music( menu, false);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Opciones de menu
var keyAccept, keyAnykey, keyUp, keyDown, keyRestart;

keyUp = keyboard_check_pressed( vk_up);
keyDown = keyboard_check_pressed( vk_down);
keyAccept = keyboard_check_pressed( vk_enter);
keyAnykey = keyboard_check_pressed( vk_anykey);

//keyRestart = keyboard_check_pressed( ord("R"));
//if ( keyRestart) game_restart();

switch (global.strGameState)
{
    //controles en modo inicio
    case "start":
        if ( keyAnykey) global.strGameState = "start_menu";
    break;
    
   //controles de menu 
    case "start_menu":    
        if ( keyUp)
        {
          if ( numOption &gt; 0) numOption--;
        }
    
        if ( keyDown)
        {
          if ( numOption &lt; array_length_1d( arrMenu) -1) numOption++;
        }
        if (keyAccept)
        {
            switch(numOption)
            {
              case 0:
                room_goto_next();
                global.strGameState = "game_new";
              break; 
              
              case 1:
                room_goto( rom_instrucciones);
                global.strGameState = "Instructions";
              break;
              
              case 2:
                room_goto( rom_opciones);
                global.strGameState = "game_option";
              break;
              
              case 3:
                game_end();
              break;
            }
         }
     break;
}
 


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Dibuja texto e indicador
draw_set_font( global.fntGlobal);
draw_set_halign( fa_center);


switch (global.strGameState)
{
  case "start":
  //dibuja logotipo
     draw_sprite_ext( spr_Triangulo, 0, room_width div 2, room_height div 4, 2, 3, 0, c_white, 1);
     //draw_sprite( spr_Triangulo, 0, room_width div 2, room_height div 4);
    
     draw_set_color( c_yellow);
     draw_text_transformed( room_width div 2, 100, "Geometry War", 2.1, 3.1, 0);//crea sombra
     draw_set_color( c_green);
     draw_text_transformed( room_width div 2, 100, "Geometry War", 2, 3, 0);
  //Fin Logotipo
   
     draw_set_color( c_black);
     draw_text( room_width div 2, 400, strStart);
     draw_set_color( c_white);
     draw_text( room_width div 2 - 1, 400 - 1, strStart);
  break;

  case "start_menu":
  //Dibuja logo
     draw_sprite_ext( spr_Triangulo, 0, room_width div 2, room_height div 4, 2, 3, 0, c_white, 1);
     //draw_sprite( spr_Triangulo, 0, room_width div 2, room_height div 4);
     
     draw_set_color( c_yellow);
     draw_text_transformed( room_width div 2, 100, "Geometry War", 2.1, 3.1, 0);//crea sombra
     draw_set_color( c_blue);
     draw_text_transformed( room_width div 2, 100, "Geometry War", 2, 3, 0);
  //Fin logo
  
  //Inicio de opciones
     distanTexto = 27;//El numero 27 indica la distancia entre linea de texto

     for(var i = 0; i &lt; array_length_1d( arrMenu); i++)
     { 
        //Color fondo de texto
        draw_set_color( c_yellow);
        draw_text( room_width div 2 + 1, 400 + i * distanTexto, arrMenu[i]);
        //Color de texto
        draw_set_color( c_green);
        draw_text( room_width div 2, 400 - 1 + i * distanTexto, arrMenu[i]);
      
        //indicador
        if ( numOption ==i) draw_sprite( spr_triangulodere , 0, 350, 400 + i * distanTexto);//lado izquierdo
        if ( numOption ==i) draw_sprite( spr_trianguloizq , 0, 650, 400 + i * distanTexto);//lado derecho
     } 
  break;
}
 
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

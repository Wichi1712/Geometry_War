<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///pausa
pausa = false;
fondo = -1;


//Variables opciones pausa

//start      ===&gt; Pantalla completa
//siguiente  ===&gt; Pantalla normal
//siguiente  ===&gt; Reiniciar juego
//siguiente  ===&gt; Reiniciar nivel
//atras      ===&gt; Cerrar juego

//global.fntGlobal = font_dialogo;
global.strOpcionesPausa = "Pausa";

numOption = 0;
numOptionSiguiente = 0;

//Texto de instrucciones
strPausa = "Presione P para salir de modo pausa";

arrMenu[0] = "Reiniciar Juego";
arrMenu[1] = "Reiniciar Nivel";
arrMenu[2] = "Cerrar juego";
//arrMenu[3] = "Pantalla Completa";
//arrMenu[4] = "Pantalla Normal";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Opciones de pausa
if (pausa == true)
{
   
var keyAccept, keyAnykey, keyUp, keyDown, keyRestart;

keyUp = keyboard_check_pressed( vk_up);
keyDown = keyboard_check_pressed( vk_down);
keyAccept = keyboard_check_pressed( vk_enter);
//keyAnykey = keyboard_check_pressed( vk_anykey);

//keyRestart = keyboard_check_pressed( ord("R"));
//if ( keyRestart) game_restart();
    
if ( keyUp)
    {
      if ( numOption &gt; 0) numOption--;
    }
    
if ( keyDown)
    {
      if ( numOption &lt; array_length_1d( arrMenu) -1) numOption++;
    }
    
if (keyAccept)
    {
        switch(numOption)
        {
        
          case 0:
          game_restart();
            room_goto( rom_logo);
            global.strOpcionesPausa = "Reinicar juego";
          break;
          
          case 1:
            room_restart();
            global.strOpcionesPausa = "Reinicar nivel";
          break;
          
          case 2:
            game_end();
          break;
          
          case 3:
            //room_goto_next();
            window_set_fullscreen( true);
            global.strOpcionesPausa = "Pantalla completa";
          break; 
          
          case 4:
            //room_goto( rom_menu);
            window_set_fullscreen( false);
            global.strOpcionesPausa = "Pantalla normal";
          break;
          

        }
     }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(pausa)
{
   //draw_sprite(fondo,0,0,0);//
   
   //draw_set_halign(fa_center);//Alineación horizontal
   //draw_set_valign(fa_middle);//Alineación vertical
   draw_set_font(font_pausa);//Fuente de texto
   draw_set_color(c_yellow);//Color de texto
   draw_text(view_xview[0] + view_wview[0]/2 - 50, view_yview[0] + view_hview[0]/2 - 200, "PAUSA");
   draw_background_ext( bg_inicio, view_xport, view_yport, 600, 400, 0, true, 0.5);//Fondo de pausa
   //draw_background_stretched( bg_inicio, view_xview, view_yview, view_wport, view_hport);//Fondo de pausa
   /* Nota: Al usar "draw_set_halign" y "draw_set_valign" afecta
            la posicion del texto de barra de energia y puntajes*/
   
   
   

//Opciones pausa

     //Dibuja titulo
     draw_sprite_ext( spr_Triangulo, 0, view_xview[0] + view_wview[0]/2, view_yview[0] + view_hview[0]/4 + 60, 2, 3, 0, c_white, 1);
    
     draw_set_color( c_yellow);
     draw_text_transformed( view_xview[0] + view_wview[0]/2 - 200, view_yview[0] + view_hview[0]/2 - 320, "Geometry War", 2.1, 3.1, 0);//crea sombra
     draw_set_color( c_green);
     draw_text_transformed( view_xview[0] + view_wview[0]/2 - 200, view_yview[0] + view_hview[0]/2 - 315, "Geometry War", 2.1, 3.1, 0);
     //Fin titulo
   
     //Dibuja texto "Presione P para salir"
     draw_set_color( c_yellow);
     draw_text( view_xview[0] + view_wview[0]/2 - 225, view_yview[0] + view_hview[0]/2 + 260, strPausa);
     //Fin texto
     
     //Inicio de opciones
     distanTexto = 47;//El numero 27 indica la distancia entre linea de texto
     poshorizontal = view_xview[0] + view_wview[0]/2 - 120;
     posvertical = view_yview[0] + view_hview[0]/2;//Posicion en Y de texto

     for(var i = 0; i &lt; array_length_1d( arrMenu); i++)
     { 
        draw_set_color( c_white);
        draw_text( poshorizontal, posvertical + i * distanTexto, arrMenu[i]);
      //Fin opciones
      
        //indicador
        if ( numOption ==i) draw_sprite( spr_triangulodere , 0, poshorizontal - 50, posvertical + i * distanTexto);//lado izquierdo
        if ( numOption ==i) draw_sprite( spr_trianguloizq , 0, poshorizontal + 230, posvertical + i * distanTexto);//lado derecho
     } 
//Fin opciones pausa
   
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="80">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Condicion para pausa
if (pausa == false)
 {
   //screen_save("pausa.png");//tomar foto de pantalla
   instance_deactivate_all(true);
   pausa = true;
   instance_activate_object( obj_barra);
      
 }
 else
 {
   //sprite_delete(fondo);//
   //fondo = -1;//
   instance_activate_all();
   pausa = false;
   
 } 
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
